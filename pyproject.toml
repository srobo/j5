[tool.poetry]
name = "j5"
version = "1.1.2"
description = "j5 Robotics Framework"
authors = ["j5 contributors <j5api@googlegroups.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/srobo/j5"
homepage = "https://studentrobotics.org/"
documentation = "https://j5.readthedocs.io/"
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Typing :: Typed",
    "Topic :: Education",
]

[tool.poetry.dependencies]
python = "^3.7"
pyusb = "^1.0"
pyserial = "^3.4"

[tool.poetry.dev-dependencies]
mypy = "*"
pytest = "*"
pytest-cov = "*"
rope = "*"
ruff = "*"
setuptools = "*"
sphinx = "*"
sphinx-rtd-theme = "*"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

[tool.mypy]
mypy_path = "stubs"

warn_unused_ignores = true
warn_return_any = true
show_error_codes = true

strict_optional = true
no_implicit_optional = true

disallow_any_unimported = true
disallow_subclassing_any = true
disallow_any_generics = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true

check_untyped_defs = true

[tool.ruff]
select = [
    "A",
    "ANN",
    "B",
    "BLE",
    "C4",
    "COM",
    "DJ",
    "DTZ",
    "E",
    "F",
    "FBT",
    "I",
    "N",
    "S",
    "T10",
    "UP",
    "W",
]
ignore = [
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "B009",    # Do not call `getattr` with a constant attribute value.
    "FBT001",  # Boolean positional arg in function definition
    "FBT002",  # Boolean default value in function definition
    "FBT003",  # Boolean positional value in function call
    "N803",    # Argument name  should be lowercase (for USB names)
    "S101",    # S101 Use of `assert` detected
]

line-length = 120